volumes:
  KAFKA_VOL: {}
services:
# NOTE: will use kafka event stream as the source of truth
  kafka0:
    image: confluentinc/cp-kafka:latest
    hostname: kafka0
    container_name: kafka0
    volumes:
      - KAFKA_VOL:/var/lib/kafka/data
    networks:
      - cqrs-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,LISTENER_ONE:PLAINTEXT,LISTENER_TWO:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'LISTENER_ONE://kafka0:29092,LISTENER_TWO://kafka0:9092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka0:29093'
      KAFKA_LISTENERS: 'CONTROLLER://kafka0:29093,LISTENER_ONE://kafka0:29092,LISTENER_TWO://kafka0:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'LISTENER_ONE'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=TRACE,kafka.request.logger=WARN'
      KAFKA_TOOLS_LOG4J_LOGLEVEL: 'ERROR'
  schema-registry:
    depends_on:
      - kafka0
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    container_name: schema-registry
    networks:
      - cqrs-net
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka0:9092'
      SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
      SCHEMA_REGISTRY_LISTENERS: 'http://localhost:8081'
      SCHEMA_REGISTRY_DEBUG: 'true'

# TODO: Need to setup
# - cp-ksqldb-server
# - cp-kafka-rest
# - cp-control-center (extra learning when have time)

networks:
  cqrs-net:
    external: true
